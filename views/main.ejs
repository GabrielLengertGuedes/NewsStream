<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>NewsStream – Página Principal</title>
    <link rel="stylesheet" href="/style.css" />
    <style>
        
        .clear-all-notifications-button {
            background-color: #f44336; 
            color: white;
            padding: 10px 18px;
            border: none;
            border-radius: 6px;
            font-weight: bold;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s ease;
            width: 100%; 
            margin-top: 15px; 
            margin-bottom: 10px; 
        }

        .clear-all-notifications-button:hover {
            background-color: #d32f2f; 
        }

        
        .notifications-content .close-popup-button {
            margin-top: 0; 
        }
    </style>
</head>
<body>

    <button class="menu-button" onclick="toggleSidebar()">☰ Categorias</button>

    <header class="navbar">
        <div class="logo">NewsStream</div>
        <div class="auth-buttons">
            <div class="notification-wrapper">
                <button class="notification-button" id="notificationButton"> 
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
                        <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h12c-1.5-1-2-5.902-2-7s-.995-14.901a1 1 1 0 1 0-1.99 0z"/>
                    </svg>
                    <span>Notificações</span> 
                    
                    <span class="notification-count <%= numNotifications > 0 ? '' : 'hidden' %>" id="notificationCount"><%= numNotifications %></span>
                </button>
            </div>
            <button onclick="location.href='/main'" class="<%= currentPath.startsWith('/main') ? 'active' : '' %>">Home</button>
            <% if (usuario && usuario.isAdmin === 1) { %>
                <button onclick="location.href='/dashboard'" class="interaction-button <%= currentPath.startsWith('/dashboard') ? 'active' : '' %>">
                    Painel Admin
                </button>
            <% } %>
            <button onclick="location.href='/logout'">Sair</button>
        </div>
    </header>

    
    <div id="notifications-popup" class="popup-overlay hidden">
        <div class="popup-content notifications-content">
            <h3>Suas Notificações</h3>
            <ul class="notifications-list" id="notificationsList">
                
                <li class="no-notifications-message" style="text-align: center; color: #777; font-style: italic;">Nenhuma notificação nova.</li>
            </ul>
            
            <button class="clear-all-notifications-button" id="clearAllNotificationsButton">Limpar Todas</button>
            <button class="close-popup-button" id="closeNotificationsButton">Fechar</button>
        </div>
    </div>
    
    <div class="main-container">
        <aside class="sidebar sidebar-main">
            <h2>Categorias</h2>
            <ul class="category-list">
                
                <li><a href="/main" class="<%= selecionada === 'Todas' ? 'active' : '' %>">Todas</a></li>
                <% categorias.forEach(cat => { %>
                    <li>
                        
                        <a href="/main?categoria=<%= encodeURIComponent(cat.nome) %>" class="<%= selecionada === cat.nome ? 'active' : '' %>">
                            <%= cat.nome %>
                        </a>
                    </li>
                <% }) %>
            </ul>
        </aside>
        
        <section class="content">
            <h2>
                <%= selecionada === 'Todas' ? `Bem-vindo, ${nome}!` : `Categoria: ${selecionada}` %>
            </h2>
            <div class="news-grid">
                <% if (noticias.length === 0) { %>
                    <p>Nenhuma notícia encontrada.</p>
                <% } else { %>
                    <% noticias.forEach(item => { %>
                        <article class="news-card">
                            <img src="<%= item.imagemUrl %>" alt="<%= item.titulo %>" />
                            <div class="card-body">
                                <h3>
                                    <a href="/noticias/<%= item.id %>"><%= item.titulo %></a>
                                </h3>
                                
                                <%- item.resumo %> 
                            </div>
                        </article>
                    <% }) %>
                <% } %>
            </div>
        </section>
    </div>

    <script>
        
        function toggleSidebar() {
            document.querySelector('.sidebar-main').classList.toggle('oculta');
            document.querySelector('.content').classList.toggle('content-expanded');
        }

        document.addEventListener('DOMContentLoaded', function() {
            const notificationButton = document.getElementById('notificationButton');
            const notificationsPopup = document.getElementById('notifications-popup');
            const closeNotificationsButton = document.getElementById('closeNotificationsButton');
            const notificationCountSpan = document.getElementById('notificationCount'); 
            const notificationsList = document.getElementById('notificationsList');
            const clearAllNotificationsButton = document.getElementById('clearAllNotificationsButton'); 

            
            async function fetchAndDisplayNotifications() {
                try {
                    const response = await fetch('/api/notificacoes');
                    const data = await response.json();

                    if (data.success && data.notificacoes.length > 0) {
                        notificationsList.innerHTML = ''; 
                        data.notificacoes.forEach(notif => {
                            const li = document.createElement('li');
                            li.innerHTML = `<span class="notification-type">${notif.lida ? '' : '• Nova '}</span> ${notif.mensagem} <a href="${notif.link || '#'}">${notif.link ? '(Ver)' : ''}</a>`;
                            if (!notif.lida) {
                                li.style.fontWeight = 'bold'; 
                            }
                            li.addEventListener('click', async () => {
                                if (!notif.lida) {
                                    await fetch(`/api/notificacoes/marcar-lida/${notif.id}`, { method: 'POST' });
                                    notif.lida = true;
                                    li.style.fontWeight = 'normal'; 
                                    updateNotificationCount(-1); 
                                }
                                if (notif.link) {
                                    window.location.href = notif.link;
                                }
                            });
                            notificationsList.appendChild(li);
                        });
                        updateNotificationCount(data.notificacoes.filter(n => !n.lida).length);
                    } else {
                        notificationsList.innerHTML = '<li class="no-notifications-message" style="text-align: center; color: #777; font-style: italic;">Nenhuma notificação nova.</li>';
                        updateNotificationCount(0);
                    }
                } catch (error) {
                    console.error('Erro ao buscar notificações:', error);
                    notificationsList.innerHTML = '<li style="color: red;">Erro ao carregar notificações.</li>';
                }
            }

            function updateNotificationCount(count) {
                if (notificationCountSpan) {
                    if (count > 0) {
                        notificationCountSpan.textContent = count;
                        notificationCountSpan.classList.remove('hidden');
                    } else {
                        notificationCountSpan.classList.add('hidden');
                    }
                }
            }

            if (notificationButton) {
                notificationButton.addEventListener('click', () => {
                    if (notificationsPopup.classList.contains('hidden')) {
                        fetchAndDisplayNotifications();
                        notificationsPopup.classList.remove('hidden');
                    } else {
                        notificationsPopup.classList.add('hidden');
                    }
                });
            }
        
            if (closeNotificationsButton) {
                closeNotificationsButton.addEventListener('click', () => {
                    notificationsPopup.classList.add('hidden');
                });
            }

            if (clearAllNotificationsButton) {
                clearAllNotificationsButton.addEventListener('click', async () => {
                    try {
                        const response = await fetch('/api/notificacoes/limpar-todas', { method: 'POST' });
                        const data = await response.json();

                        if (data.success) {
                            notificationsList.innerHTML = '<li class="no-notifications-message" style="text-align: center; color: #777; font-style: italic;">Nenhuma notificação nova.</li>';
                            updateNotificationCount(0);
                            alert('Todas as notificações foram limpas!');
                        } else {
                            alert('Erro ao limpar notificações: ' + data.message);
                        }
                    } catch (error) {
                        console.error('Erro ao limpar notificações:', error);
                        alert('Erro de comunicação ao limpar notificações.');
                    }
                });
            }
        
            if (notificationsPopup) {
                notificationsPopup.addEventListener('click', (event) => {
                    if (event.target === notificationsPopup) { 
                        notificationsPopup.classList.add('hidden');
                    }
                });
            }    

            fetchAndDisplayNotifications();
        }); 
    </script>

</body>
</html>
